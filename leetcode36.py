'''
36,有效的数独
'''
class Solution:
    def isValidSudoku(self, board):
        temp1 = []#行
        temp2 = []#列
        temp3 = [[],[],[],[],[],[],[],[],[]]#子数独
        for i in range(9):
            for x in range(9):
                # 先遍历行
                if board[x][i] != ".":
                    if board[x][i] in temp1:
                        return False
                    else:
                        temp1.append(board[x][i])

                #再遍历列
                if board[i][x] != ".":
                    if board[i][x] in temp2:
                        return False
                    else:
                        temp2.append(board[i][x])

                #子数独
                '''
                先算出当前在第几个子数独
                再将当前值加入用于存储的二维数组
                最后判断二维数组中每行是否有重复值
                '''
                # 当前所在子数独
                son = int((i // 3)*3 + x/3)
                # print(son)
                if board[i][x] != ".":
                    if board[i][x] in temp3[son]:
                        return False
                    else:
                        temp3[son].append(board[i][x])

            temp1 = []
            temp2 = []
        return True

code = Solution()
print(code.isValidSudoku([
  ["5","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]))
print(code.isValidSudoku([
    ["8", "3", ".", ".", "7", ".", ".", ".", "."],
    ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    [".", "9", "8", ".", ".", ".", ".", "6", "."],
    ["5", ".", ".", ".", "6", ".", ".", ".", "3"],
    ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
    ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    [".", "6", ".", ".", ".", ".", "2", "8", "."],
    [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    [".", ".", ".", ".", "8", ".", ".", "7", "9"]
]))
print(code.isValidSudoku([
     [".", "8", "7", "6", "5", "4", "3", "2", "1"],
     ["2", ".", ".", ".", ".", ".", ".", ".", "."],
     ["3", ".", ".", ".", ".", ".", ".", ".", "."],
     ["4", ".", ".", ".", ".", ".", ".", ".", "."],
     ["5", ".", ".", ".", ".", ".", ".", ".", "."],
     ["6", ".", ".", ".", ".", ".", ".", ".", "."],
     ["7", ".", ".", ".", ".", ".", ".", ".", "."],
     ["8", ".", ".", ".", ".", ".", ".", ".", "."],
     ["9", ".", ".", ".", ".", ".", ".", ".", "."]
]))
